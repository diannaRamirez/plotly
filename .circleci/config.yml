version: 2.1

orbs:
  win: circleci/windows@5.0

commands: # all jobs/workflows use same commands
  set_version:
    steps:
      - run:
          name: set_version
          command: bash ./toolchain/stages/00-set_version.sh --latest --verbose

jobs:
  linux-docker: # similiar to the one below us
    docker: # machine specifies a linux vm, can we just use docker for the pull?
      - image: cimg/python:3.12.3
    resource_class: small
    steps:
      - checkout
      - run:
        name: Install Dependencies
        command: sudo apt-get update && sudo apt-get install rsync
      - set_version

  linux-x64:
    machine:
      image: default # maybe specify an image? circle-ci changes them
    resource_class: medium
    steps:
      - checkout
      - run:
        name: Install Dependencies
        command: sudo apt-get update && sudo apt-get install rsync
      - set_version

  windows-x64:
    executor:
      name: win/default
    steps:
      - checkout
      # The following actually comes installed already:
      - run:
        name: Install Dependencies
        #command: choco install git.install --params "'/GitAndUnixToolsOnPath /WindowsTerminal /NoAutoCrlf'"
        command: choco install rsync
      - set_version

  osx:
    macos:  # indicate that we are using the macOS executor
      xcode: 15.4.0
    resource_class: macos.m1.medium.gen1
    steps:
      - checkout
      - run:
        name: Install Dependencies
        command: brew install rsync
      # The following recommended by circle CI, but it takes time, costs money, and may not be necessary
      #- run:
        #name: Delete simulators and unused platforms to save space
        #command: |
          #sudo rm -rf /Library/Developer/CoreSimulator &> /dev/null
          #sudo rm -rf /Applications/Xcode.app/Contents/Developer/Platforms/AppleTVOS.platform &> /dev/null
          #sudo rm -rf /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform &> /dev/null
          #sudo rm -rf /Applications/Xcode.app/Contents/Developer/Platforms/WatchOS.platform &> /dev/null
          #sudo rm -rf /Applications/Xcode.app/Contents/Developer/Platforms/WatchSimulator.platform &> /dev/null
          #sudo rm -rf /Applications/Xcode.app/Contents/Developer/Platforms/AppleTVSimulator.platform &> /dev/null
          #sudo rm -rf /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform &> /dev/null
      - set_version

workflows:
  1-arch-3-os: # this workflow will do mac, linux, and windows without arch xcompile
    jobs:
      - hold:
          type: approval
      - linux-x64:
          requires:
            - hold
      - windows-x64:
          requires:
            - hold
      - osx:
          requires:
            - hold
  cheap_test:
    jobs:
      - hold:
          type: approval
      - linux-docker:
          requires:
            - hold
